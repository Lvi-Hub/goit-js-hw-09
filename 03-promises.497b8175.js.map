{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAM,CACVC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BAmCpC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IACpBQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,MAExBM,EAAO,C,SAAEP,E,MAAUC,IACnBQ,QAAQC,IAAI,C,SAAEV,E,MAAUC,I,GAEzBA,EAAM,G,CAzCbV,EAAIC,OAAOmB,iBAAiB,UAG5B,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOxB,EAAII,WAAWqB,OAClC,MAAMC,EAAOF,OAAOxB,EAAIK,UAAUoB,OAC5BnB,EAASkB,OAAOxB,EAAIM,OAAOmB,OAGjC,IAAK,IAAIE,EAAI,EAAGA,GAAKrB,EAAQqB,GAAK,EAEhCnB,EAAcmB,EAAGJ,GACdK,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQC,IAAIV,EAAUC,GACtBmB,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBQ,QAAQC,IAAIV,EAAUC,GACtBmB,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAGnDa,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst ref = {\n  formEl: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\n//console.log(ref.firstDelay.value);\n//--\n\nref.formEl.addEventListener(`submit`, readData);\n//--\n\nfunction readData(e) {\n  e.preventDefault();\n  let delay = Number(ref.firstDelay.value);\n  const step = Number(ref.delayStep.value);\n  const amount = Number(ref.amount.value);\n  //console.log(delay, step, amount);\n\n  for (let i = 1; i <= amount; i += 1) {\n    //console.log(i);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(position, delay);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(position, delay);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\n//--\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log({ position, delay });\n      } else {\n        reject({ position, delay });\n        console.log({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$ref","formEl","document","querySelector","firstDelay","delayStep","amount","btnSubmit","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","e","preventDefault","delay1","Number","value","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.497b8175.js.map"}