{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAM,CACVC,OAAQC,SAASC,cAAc,SAC/BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BAmCpC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UACpBQ,QAAQC,IAAI,CAAEV,WAAUC,YAExBM,EAAO,CAAEP,WAAUC,UACnBQ,QAAQC,IAAI,CAAEV,WAAUC,U,GAEzBA,E,IAzCPV,EAAIC,OAAOmB,iBAAkB,UAG7B,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAAIC,EAAQC,OAAOxB,EAAII,WAAWqB,OAC5BC,EAAOF,OAAOxB,EAAIK,UAAUoB,OAC5BnB,EAASkB,OAAOxB,EAAIM,OAAOmB,OAGxBE,EAAI,EAAGA,GAAKrB,EAAQqB,GAAK,EAEhCnB,EAAcmB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBQ,QAAQC,IAAIV,EAAUC,GACtBoB,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBQ,QAAQC,IAAIV,EAAUC,GACtBoB,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDa,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst ref = {\n  formEl: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnSubmit: document.querySelector('button[type=\"submit\"]'),\n};\n//console.log(ref.firstDelay.value);\n//--\n\nref.formEl.addEventListener(`submit`, readData);\n//--\n\nfunction readData(e) {\n  e.preventDefault();\n  let delay = Number(ref.firstDelay.value);\n  const step = Number(ref.delayStep.value);\n  const amount = Number(ref.amount.value);\n  //console.log(delay, step, amount);\n\n  for (let i = 1; i <= amount; i += 1) {\n    //console.log(i);\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(position, delay);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(position, delay);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\n//--\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log({ position, delay });\n      } else {\n        reject({ position, delay });\n        console.log({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$ref","formEl","document","querySelector","firstDelay","delayStep","amount","btnSubmit","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","e","preventDefault","delay1","Number","value","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5ebe8865.js.map"}